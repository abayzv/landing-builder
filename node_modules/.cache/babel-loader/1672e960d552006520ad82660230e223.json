{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/builder/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/var/www/builder/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/var/www/builder/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      },\n      message: \"\"\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isAuth'])),\n  methods: _objectSpread(_objectSpread({}, mapActions('auth', ['login'])), {}, {\n    _login: function _login() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _this.login(_this.form);\n\n              case 3:\n                _this.$router.replace({\n                  name: 'home'\n                });\n\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                _this.message = _context.t0.response.data.messages;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }))();\n    }\n  }),\n  created: function created() {\n    if (this.isAuth) {\n      this.$router.replace({\n        name: 'home'\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;AAiEI,SAAQA,UAAR,EAAoBC,UAApB,QAAqC,MAArC;AACA,eAAe;EACXC,IAAG,EAAI;IAAA,OAAO;MACVC,IAAI,EAAE;QACFC,KAAK,EAAE,EADL;QAEFC,QAAQ,EAAE;MAFR,CADI;MAKVC,OAAO,EAAE;IALC,CAAP;EAAA,CADI;EAQXC,QAAQ,oBACDP,UAAU,CAAC,CAAC,QAAD,CAAD,CADT,CARG;EAWXQ,OAAO,kCACAP,UAAU,CAAC,MAAD,EAAS,CAAC,OAAD,CAAT,CADV;IAEGQ,MAFH,oBAEY;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAED,KAAI,CAACC,KAAL,CAAW,KAAI,CAACP,IAAhB,CAFC;;cAAA;gBAGP,KAAI,CAACQ,OAAL,CAAaC,OAAb,CAAqB;kBAACC,IAAI,EAAE;gBAAP,CAArB;;gBAHO;gBAAA;;cAAA;gBAAA;gBAAA;gBAKP,KAAI,CAACP,OAAL,GAAe,YAAEQ,QAAF,CAAWZ,IAAX,CAAgBa,QAA/B;;cALO;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOf;EATG,EAXI;EAsBXC,OAtBW,qBAsBF;IACL,IAAG,KAAKC,MAAR,EAAgB;MACZ,KAAKN,OAAL,CAAaC,OAAb,CAAqB;QAACC,IAAI,EAAE;MAAP,CAArB;IACJ;EACJ;AA1BW,CAAf","names":["mapGetters","mapActions","data","form","email","password","message","computed","methods","_login","login","$router","replace","name","response","messages","created","isAuth"],"sourceRoot":"","sources":["/var/www/builder/src/views/auth/Login.vue"],"sourcesContent":["<template>\n    <div class=\"login\">\n      <div class=\"flex justify-center\">\n          <div\n            class=\"p-6 max-w-sm bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\"\n          >\n            <div class=\"mb-5 text-center\">\n              <h5\n              class=\"mb-2 text font-bold tracking-tight text-gray-900 dark:text-white\"\n            >\n              Login\n            </h5>\n            <p>Silahkan login untuk melanjutkan ke halaman berikutnya</p>\n            <div v-if=\"message.error\" class=\"p-4 mb-4 mt-3 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\" role=\"alert\">\n            <span class=\"font-medium\">Error!</span> {{message.error}}\n            </div>\n            </div>\n            <form @submit.prevent=\"_login\">\n                <div>\n              <label\n                for=\"email\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                >Email</label\n              >\n              <input\n                v-model=\"form.email\"\n                autocomplete=\"email\"\n                type=\"text\"\n                id=\"email\"\n                class=\"bg-gray-50 border mb-3 border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"Masukan email\"\n                required\n              />\n            </div>\n  \n            <div>\n              <label\n                for=\"password\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n                >Password</label\n              >\n              <div class=\"text-sm text-red-500 mb-2\" v-if=\"message\">{{message.password}}</div>\n              <input\n              v-model=\"form.password\"\n                type=\"password\"\n                autocomplete=\"current-password\"\n                id=\"password\"\n                class=\"bg-gray-50 border mb-3 border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                placeholder=\"Masukan password\"\n                required\n              />\n            </div>\n            <button type=\"submit\"\n              href=\"#\"\n              class=\"mt-5 inline-flex items-center py-2 px-3 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            >\n              Login\n            </button>\n            </form>\n          </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {mapGetters ,mapActions} from 'vuex'\n    export default {\n        data : () => ({\n            form: {\n                email: '',\n                password: ''\n            },\n            message: \"\" ,\n        }),\n        computed: {\n            ...mapGetters(['isAuth'])\n        },\n        methods: {\n            ...mapActions('auth', ['login']),\n            async _login() {\n                try {\n                    await this.login(this.form)\n                    this.$router.replace({name: 'home'})\n                } catch (e) {\n                    this.message = e.response.data.messages\n                }\n            }\n        },\n        created(){\n            if(this.isAuth) {\n                this.$router.replace({name: 'home'})\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module"}